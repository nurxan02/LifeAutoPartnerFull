# Generated by Django 5.2 on 2025-04-26 19:30

import datetime
import django.core.validators
import django.db.models.deletion
import lifeautorent.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=100, verbose_name='Last Name')),
                ('date_of_birth', models.DateField(default=datetime.date(2000, 1, 1), verbose_name='Date of Birth')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('country_code', models.CharField(blank=True, default='+48', max_length=10, null=True, verbose_name='Country Index')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Phone number must contain only digits and be between 9 and 15 characters.', regex='^\\d{9,15}$')], verbose_name='Phone Number')),
                ('status', models.CharField(blank=True, choices=[('New', 'New'), ('Active', 'Active'), ('Inactive', 'Inactive'), ('Blocked', 'Blocked'), ('Deleted', 'Deleted')], default='New', max_length=100, null=True, verbose_name='Status')),
                ('nationality', models.CharField(blank=True, choices=[('Polish', 'Polish'), ('Azerbaijani', 'Azerbaijani'), ('Belarusian', 'Belarusian'), ('Ukrainian', 'Ukrainian'), ('Turkish', 'Turkish'), ('Afghan', 'Afghan'), ('Albanian', 'Albanian'), ('Algerian', 'Algerian'), ('American', 'American'), ('Andorran', 'Andorran'), ('Angolan', 'Angolan'), ('Antiguan', 'Antiguan'), ('Argentine', 'Argentine'), ('Armenian', 'Armenian'), ('Australian', 'Australian'), ('Austrian', 'Austrian'), ('Bahamian', 'Bahamian'), ('Bahraini', 'Bahraini'), ('Bangladeshi', 'Bangladeshi'), ('Barbadian', 'Barbadian'), ('Belgian', 'Belgian'), ('Belizean', 'Belizean'), ('Beninese', 'Beninese'), ('Bhutanese', 'Bhutanese'), ('Bolivian', 'Bolivian'), ('Bosnian', 'Bosnian'), ('Botswanan', 'Botswanan'), ('Brazilian', 'Brazilian'), ('British', 'British'), ('Bruneian', 'Bruneian'), ('Bulgarian', 'Bulgarian'), ('Burkinabe', 'Burkinabe'), ('Burmese', 'Burmese'), ('Burundian', 'Burundian'), ('Cambodian', 'Cambodian'), ('Cameroonian', 'Cameroonian'), ('Canadian', 'Canadian'), ('Cape Verdean', 'Cape Verdean'), ('Central African', 'Central African'), ('Chadian', 'Chadian'), ('Chilean', 'Chilean'), ('Chinese', 'Chinese'), ('Colombian', 'Colombian'), ('Comoran', 'Comoran'), ('Congolese', 'Congolese'), ('Costa Rican', 'Costa Rican'), ('Croatian', 'Croatian'), ('Cuban', 'Cuban'), ('Cypriot', 'Cypriot'), ('Czech', 'Czech'), ('Danish', 'Danish'), ('Djiboutian', 'Djiboutian'), ('Dominican', 'Dominican'), ('Dutch', 'Dutch'), ('East Timorese', 'East Timorese'), ('Ecuadorean', 'Ecuadorean'), ('Egyptian', 'Egyptian'), ('Emirati', 'Emirati'), ('Equatorial Guinean', 'Equatorial Guinean'), ('Eritrean', 'Eritrean'), ('Estonian', 'Estonian'), ('Ethiopian', 'Ethiopian'), ('Fijian', 'Fijian'), ('Finnish', 'Finnish'), ('French', 'French'), ('Gabonese', 'Gabonese'), ('Gambian', 'Gambian'), ('Georgian', 'Georgian'), ('German', 'German'), ('Ghanaian', 'Ghanaian'), ('Greek', 'Greek'), ('Grenadian', 'Grenadian'), ('Guatemalan', 'Guatemalan'), ('Guinea-Bissauan', 'Guinea-Bissauan'), ('Guinean', 'Guinean'), ('Guyanese', 'Guyanese'), ('Haitian', 'Haitian'), ('Honduran', 'Honduran'), ('Hungarian', 'Hungarian'), ('Icelandic', 'Icelandic'), ('Indian', 'Indian'), ('Indonesian', 'Indonesian'), ('Iranian', 'Iranian'), ('Iraqi', 'Iraqi'), ('Irish', 'Irish'), ('Israeli', 'Israeli'), ('Italian', 'Italian'), ('Ivorian', 'Ivorian'), ('Jamaican', 'Jamaican'), ('Japanese', 'Japanese'), ('Jordanian', 'Jordanian'), ('Kazakh', 'Kazakh'), ('Kenyan', 'Kenyan'), ('Kiribati', 'Kiribati'), ('Kuwaiti', 'Kuwaiti'), ('Kyrgyz', 'Kyrgyz'), ('Laotian', 'Laotian'), ('Latvian', 'Latvian'), ('Lebanese', 'Lebanese'), ('Liberian', 'Liberian'), ('Libyan', 'Libyan'), ('Liechtensteiner', 'Liechtensteiner'), ('Lithuanian', 'Lithuanian'), ('Luxembourgish', 'Luxembourgish'), ('Macedonian', 'Macedonian'), ('Malagasy', 'Malagasy'), ('Malawian', 'Malawian'), ('Malaysian', 'Malaysian'), ('Maldivian', 'Maldivian'), ('Malian', 'Malian'), ('Maltese', 'Maltese'), ('Marshallese', 'Marshallese'), ('Mauritanian', 'Mauritanian'), ('Mauritian', 'Mauritian'), ('Mexican', 'Mexican'), ('Micronesian', 'Micronesian'), ('Moldovan', 'Moldovan'), ('Monacan', 'Monacan'), ('Mongolian', 'Mongolian'), ('Montenegrin', 'Montenegrin'), ('Moroccan', 'Moroccan'), ('Mozambican', 'Mozambican'), ('Namibian', 'Namibian'), ('Nauruan', 'Nauruan'), ('Nepalese', 'Nepalese'), ('New Zealander', 'New Zealander'), ('Nicaraguan', 'Nicaraguan'), ('Nigerian', 'Nigerian'), ('Nigerien', 'Nigerien'), ('North Korean', 'North Korean'), ('Norwegian', 'Norwegian'), ('Omani', 'Omani'), ('Pakistani', 'Pakistani'), ('Palauan', 'Palauan'), ('Panamanian', 'Panamanian'), ('Papua New Guinean', 'Papua New Guinean'), ('Paraguayan', 'Paraguayan'), ('Peruvian', 'Peruvian'), ('Philippine', 'Philippine'), ('Polish', 'Polish'), ('Portuguese', 'Portuguese'), ('Qatari', 'Qatari'), ('Romanian', 'Romanian'), ('Russian', 'Russian'), ('Rwandan', 'Rwandan'), ('Saint Lucian', 'Saint Lucian'), ('Salvadoran', 'Salvadoran'), ('Samoan', 'Samoan'), ('San Marinese', 'San Marinese'), ('Sao Tomean', 'Sao Tomean'), ('Saudi', 'Saudi'), ('Senegalese', 'Senegalese'), ('Serbian', 'Serbian'), ('Seychellois', 'Seychellois'), ('Sierra Leonean', 'Sierra Leonean'), ('Singaporean', 'Singaporean'), ('Slovak', 'Slovak'), ('Slovenian', 'Slovenian'), ('Solomon Islander', 'Solomon Islander'), ('Somali', 'Somali'), ('South African', 'South African'), ('South Korean', 'South Korean'), ('South Sudanese', 'South Sudanese'), ('Spanish', 'Spanish'), ('Sri Lankan', 'Sri Lankan'), ('Sudanese', 'Sudanese'), ('Surinamer', 'Surinamer'), ('Swazi', 'Swazi'), ('Swedish', 'Swedish'), ('Swiss', 'Swiss'), ('Syrian', 'Syrian'), ('Taiwanese', 'Taiwanese'), ('Tajik', 'Tajik'), ('Tanzanian', 'Tanzanian'), ('Thai', 'Thai'), ('Togolese', 'Togolese'), ('Tongan', 'Tongan'), ('Trinidadian or Tobagonian', 'Trinidadian or Tobagonian'), ('Tunisian', 'Tunisian'), ('Turkish', 'Turkish'), ('Turkmen', 'Turkmen'), ('Tuvaluan', 'Tuvaluan'), ('Ugandan', 'Ugandan'), ('Ukrainian', 'Ukrainian'), ('Uruguayan', 'Uruguayan'), ('Uzbek', 'Uzbek'), ('Vanuatuan', 'Vanuatuan'), ('Venezuelan', 'Venezuelan'), ('Vietnamese', 'Vietnamese'), ('Yemeni', 'Yemeni'), ('Zambian', 'Zambian'), ('Zimbabwean', 'Zimbabwean'), ('Not Specified', 'Not Specified')], default='Not Specified', max_length=100, null=True)),
                ('address', models.TextField(blank=True, verbose_name='Address')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_contacted', models.BooleanField(default=False, verbose_name='Is Contacted')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Is Verified')),
            ],
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('New', 'New'), ('Active', 'Active'), ('Inactive', 'Inactive'), ('Blocked', 'Blocked'), ('Deleted', 'Deleted')], default='New', max_length=100, null=True, verbose_name='Status')),
                ('name', models.CharField(max_length=100)),
                ('brand', models.CharField(max_length=100)),
                ('price_per_week', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True, help_text='Is the product currently active?', verbose_name='Busy')),
                ('image', models.ImageField(blank=True, help_text='Upload an image of the product', null=True, upload_to=lifeautorent.models.rental_product_image_path)),
                ('sku', models.CharField(blank=True, max_length=50, unique=True, verbose_name='SKU Code')),
                ('category', models.CharField(choices=[('delivery', 'For Delivery'), ('taxi', 'For Taxi')], help_text='Category of the car: Delivery/Taxi', max_length=10, verbose_name='Category')),
                ('seating_capacity', models.IntegerField(help_text='Number of seats')),
                ('taxi_license_number', models.CharField(default='N/A', help_text='Taxi License number of the car', max_length=100, verbose_name='Taxi License Number')),
                ('sign_number', models.CharField(help_text='Sign Number of the car', max_length=100, verbose_name='Sign Number')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s', to='lifeautorent.client', verbose_name='Client')),
            ],
            options={
                'verbose_name': 'Car',
                'verbose_name_plural': 'Cars',
            },
        ),
        migrations.CreateModel(
            name='Bike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('New', 'New'), ('Active', 'Active'), ('Inactive', 'Inactive'), ('Blocked', 'Blocked'), ('Deleted', 'Deleted')], default='New', max_length=100, null=True, verbose_name='Status')),
                ('name', models.CharField(max_length=100)),
                ('brand', models.CharField(max_length=100)),
                ('price_per_week', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True, help_text='Is the product currently active?', verbose_name='Busy')),
                ('image', models.ImageField(blank=True, help_text='Upload an image of the product', null=True, upload_to=lifeautorent.models.rental_product_image_path)),
                ('sku', models.CharField(blank=True, max_length=50, unique=True, verbose_name='SKU Code')),
                ('gear_count', models.IntegerField()),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s', to='lifeautorent.client', verbose_name='Client')),
            ],
            options={
                'verbose_name': 'Bike',
                'verbose_name_plural': 'Bikes',
            },
        ),
        migrations.CreateModel(
            name='ClientDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(blank=True, null=True, upload_to=lifeautorent.models.client_document_path, validators=[django.core.validators.FileExtensionValidator(['pdf', 'jpg', 'jpeg', 'png'])], verbose_name='Document')),
                ('expire', models.BooleanField(default=False, verbose_name='Expire?')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Description')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Uploaded At')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='lifeautorent.client', verbose_name='Client')),
            ],
            options={
                'verbose_name': 'Client Document',
                'verbose_name_plural': 'Client Documents',
            },
        ),
        migrations.CreateModel(
            name='ClientPayments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, default='Weekly rental fee', max_length=255, verbose_name='Description')),
                ('payment_interests', models.CharField(blank=True, max_length=255, null=True, verbose_name='Payment Interests')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('refundable', models.BooleanField(default=False, verbose_name='Refundable')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Payments', to='lifeautorent.client', verbose_name='Client')),
            ],
            options={
                'verbose_name': 'Client Payment Interests',
                'verbose_name_plural': 'Client Payment Interests',
            },
        ),
        migrations.CreateModel(
            name='ClientPenalties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Description')),
                ('penalty_fee', models.CharField(blank=True, max_length=255, verbose_name='Penalty Interests')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Penalties', to='lifeautorent.client', verbose_name='Client')),
            ],
            options={
                'verbose_name': 'Client Penalty',
                'verbose_name_plural': 'Client Penalties',
            },
        ),
        migrations.CreateModel(
            name='EBike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('New', 'New'), ('Active', 'Active'), ('Inactive', 'Inactive'), ('Blocked', 'Blocked'), ('Deleted', 'Deleted')], default='New', max_length=100, null=True, verbose_name='Status')),
                ('name', models.CharField(max_length=100)),
                ('brand', models.CharField(max_length=100)),
                ('price_per_week', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True, help_text='Is the product currently active?', verbose_name='Busy')),
                ('image', models.ImageField(blank=True, help_text='Upload an image of the product', null=True, upload_to=lifeautorent.models.rental_product_image_path)),
                ('sku', models.CharField(blank=True, max_length=50, unique=True, verbose_name='SKU Code')),
                ('battery_capacity', models.FloatField(help_text='Battery capacity in kWh')),
                ('max_speed', models.FloatField(help_text='Maximum speed in km/h')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s', to='lifeautorent.client', verbose_name='Client')),
            ],
            options={
                'verbose_name': 'E-Bike',
                'verbose_name_plural': 'E-Bikes',
            },
        ),
        migrations.CreateModel(
            name='Scooter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('New', 'New'), ('Active', 'Active'), ('Inactive', 'Inactive'), ('Blocked', 'Blocked'), ('Deleted', 'Deleted')], default='New', max_length=100, null=True, verbose_name='Status')),
                ('name', models.CharField(max_length=100)),
                ('brand', models.CharField(max_length=100)),
                ('price_per_week', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True, help_text='Is the product currently active?', verbose_name='Busy')),
                ('image', models.ImageField(blank=True, help_text='Upload an image of the product', null=True, upload_to=lifeautorent.models.rental_product_image_path)),
                ('sku', models.CharField(blank=True, max_length=50, unique=True, verbose_name='SKU Code')),
                ('max_speed', models.FloatField(help_text='Maximum speed in km/h')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s', to='lifeautorent.client', verbose_name='Client')),
            ],
            options={
                'verbose_name': 'Scooter',
                'verbose_name_plural': 'Scooters',
            },
        ),
    ]
